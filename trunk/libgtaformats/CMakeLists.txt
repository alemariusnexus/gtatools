PROJECT(LIBGTAFORMATS CXX)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(CPACK_DESCRIPTION_SUMMARY "A library for loading different formats of the GTA game series into easy-to-use C++ objects.")
SET(CPACK_PACKAGE_VENDOR "Alemarius Nexus")
SET(CPACK_VERSION_MAJOR 0)
SET(CPACK_VERSION_MINOR 1)
INCLUDE(CPack)

OPTION(GF_STATIC_BUILD "Do you want to build the library as a static library?" ON)


MACRO(ADD_LIBRARY_DEPENDENCY LIB_NAME LIB_DESCR LIB_HEADER)
	STRING(TOUPPER ${LIB_NAME} LIB_NAME_UPPER)
	FIND_LIBRARY(${LIB_NAME_UPPER}_LIB_PATH ${LIB_NAME} DOC "Path to library ${LIB_DESCR} (including the library file itself)")
	IF(NOT ${LIB_NAME_UPPER}_LIB_PATH)
		MESSAGE("WARNING: Failed to automatically find library ${LIB_DESCR}. Don't forget to manually set ${LIB_NAME_UPPER}_LIB_PATH to the library path!")
		SET(${LIB_NAME_UPPER}_LIB_PATH "NOT_FOUND")
	ENDIF(NOT ${LIB_NAME_UPPER}_LIB_PATH)

	FIND_PATH(${LIB_NAME_UPPER}_INCLUDE_PATH ${LIB_HEADER})
	SET(LIB_INCLUDE_PATH ${LIB_NAME_UPPER}_INCLUDE_PATH)
	INCLUDE_DIRECTORIES(${LIB_INCLUDE_PATH})
ENDMACRO(ADD_LIBRARY_DEPENDENCY)

ADD_SUBDIRECTORY(src)
INCLUDE_DIRECTORIES(${LIBGTAFORMATS_BINARY_DIR}/src)

IF(GF_USE_SQUISH)
	ADD_LIBRARY_DEPENDENCY(squish squish squish.h)
ENDIF(GF_USE_SQUISH)


FOREACH(SRC_FILE ${SRC_FILES})
	SET(SRC_PATHS ${SRC_PATHS} src/${SRC_FILE})
ENDFOREACH(SRC_FILE)
FOREACH(INC_FILE ${INC_FILES})
	SET(INC_PATHS ${INC_PATHS} src/${INC_FILE}.h)
ENDFOREACH(INC_FILE)

IF(GF_STATIC_BUILD)
	ADD_LIBRARY(gtaformats STATIC ${SRC_PATHS})
ELSE(GF_STATIC_BUILD)
	ADD_LIBRARY(gtaformats SHARED ${SRC_PATHS})
ENDIF(GF_STATIC_BUILD)

TARGET_LINK_LIBRARIES(gtaformats ${SQUISH_LIB_PATH})

INSTALL(	TARGETS gtaformats
		DESTINATION lib
		PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ
		)
INSTALL(	FILES ${INC_PATHS}
		DESTINATION include/gtaformats
		PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ
		)
