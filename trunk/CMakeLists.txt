PROJECT(GTATOOLS CXX)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

OPTION(GTAIMG_BUILD "Whether you want gtaimg to be built" ON)
OPTION(GTATXD_BUILD "Whether you want gtatxd to be built" ON)
OPTION(GTATOOLS_GUI_BUILD "Whether you want gtatools-gui to be built" ON)

SET(LIBS
	Boost::Regex boost_regex
	Squish squish
	DevIL IL
	)

LIST(LENGTH LIBS LIBS_LENGTH)
MATH(EXPR LIBS_COUNT ${LIBS_LENGTH}/2-1)
FOREACH(LIB RANGE ${LIBS_COUNT})
	MATH(EXPR LIB_DESCR_IDX ${LIB}*2)
	MATH(EXPR LIB_NAME_IDX ${LIB}*2+1)
	LIST(GET LIBS ${LIB_DESCR_IDX} LIB_DESCR)
	LIST(GET LIBS ${LIB_NAME_IDX} LIB_NAME)
	STRING(TOUPPER "${LIB_NAME}" LIB_NAME_UPPER)
	
	FIND_LIBRARY(${LIB_NAME_UPPER}_LIB_PATH ${LIB_NAME} DOC "Path to library ${LIB_DESCR}")
	IF(NOT ${LIB_NAME_UPPER}_LIB_PATH)
		MESSAGE("WARNING: Failed to automatically find library ${LIB_DESCR}. Don't forget to manually set ${LIB_NAME_UPPER}_LIB_PATH to the library path!")
		SET(${LIB_NAME_UPPER}_LIB_PATH "NOTT_FOUND")
	ENDIF(NOT ${LIB_NAME_UPPER}_LIB_PATH)
ENDFOREACH(LIB)

IF(GTATOOLS_GUI_BUILD)
	FIND_PACKAGE(wxWidgets COMPONENTS base core)
	INCLUDE(${wxWidgets_USE_FILE})
ENDIF(GTATOOLS_GUI_BUILD)

ADD_SUBDIRECTORY(libgtaformats)

IF(GTAIMG_BUILD)
	ADD_SUBDIRECTORY(gtaimg)
ENDIF(GTAIMG_BUILD)

IF(GTATXD_BUILD)
	ADD_SUBDIRECTORY(gtatxd)
ENDIF(GTATXD_BUILD)

IF(GTATOOLS_GUI_BUILD)
	ADD_SUBDIRECTORY(gtatools-gui)
ENDIF(GTATOOLS_GUI_BUILD)
